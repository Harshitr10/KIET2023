Session 03
/*
 * It is used to initialize the object.
 * Constructor is  a Special member method of the class
 * it has a Same name as class name 
 * it is invoked implicitly when object of that particular class is created 
 * There are Three type of constructor in java
 * 1. Default : if we not provide any kind of constructor 
 * in class then the default constructor 
 * provided by JVM and initialized the object by its default value. 
 * 2. No Argument 
 * 3. Parameterized 
 Constructors never be inherited.
 All the Access specifier applicable on Constructor
 imp: Constructor has no return type
 imp: if We provide explicit constructor to the class 
 then JVM Will not provide the Default Constructor

*/
Scope :
Local Variable : variable whoose scope is with in the block.

Member Variable : those variable which is declared in class scope known as 
member variable | Instance variable

Class Variable :

Task:  Constructor Chaining?
Constructor call another Constructor called Constructor chaining

what is Super : super is keyword used to hold the immediate parent class reference.
What is this : this is keyword used to hold the current class reference.
Please Implement Simple | Multilevel | Hirarchal Inheritance
Modifiers final | static
====================================================
****** 
1. Parent class reference variable can hold the 
object of its own class or its subclasses.
2. By using parent class reference variable 
we access only those method of child class 
which is overridden.
==============================================
Session : 6
1.Abstract class is a class which object never be created.
2. By Using Abstract class we achieve 
abstraction in java.
3. Abstract classes have contructors
4. Abstract class may or may 
not contain abstract method.
=======================================================
Interfaces 

Task : 
1. Memory Layout
2. static 
2. Garbage Collector | finalize method
2. Polymorphism
3. Abstract Classes & Interfaces | Functional Interfaces | Marker Intefaces
4. Singleton Class 
5. Exception 
6. Lambda Expression
7. Collection Framework
8. Spring 





